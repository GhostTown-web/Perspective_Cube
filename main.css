html {
  box-sizing: border-box;
  width: 100%;
  height: 100%;
}

*,
*:before,
*:after {
  box-sizing: inherit;
  padding: 0;
  margin: 0;
}

body{
  font-family: sans-serif;
  height: 100%;
  margin: 0;
  background: #261c33;
  overflow: hidden;
  display: flex;
  align-items: center;
  justify-content: center;
}

h2 {
  color: #8d81f3;
  text-align: center;
  font-size: 50px;
  margin: 30px;
}

main {
  display: flex;
  justify-content: space-around;
  align-items: center;
  height: 500px;
  max-width: 768px;
  margin: 0 auto;
  font-family: monospace, sans-serif;
  font-size: 22px;
}

main label {
  display: block;
}

main input[type="range"] {
  display: block;
  margin-bottom: 20px;
  width: 200px;
}

section.settings {
  width: 50%;
  z-index: 2;
}

button {
  background-color: #8d81f3;
  color: #fff;
  display: inline-block;
  font-size: 20px;
  padding: 10px;
  outline: none;
  border: none;
  margin-right: 10px;
}

label {
  color: #fff;
}

.cube-container {
  padding: 50px;
  border: 1px solid #8d81f3;
}

.cube {
  --width: 200px;
  --height: 200px;
  --depth: 200px;
  height: var(--height);
  width: var(--width); 
  position: relative;
  transform: rotateX(24deg) rotateY(32deg);
  transform-style: preserve-3d;
}

.cube__side {
  background-color: hsla(0, 0%, 100%, 0.2);
  border: 1px solid hsl(0, 0%, 10%);
  position: absolute;
}

.cube__side:nth-of-type(1),
.cube__side:nth-of-type(2) {
  --coefficient: -0.5;
  height: var(--height);
  width: var(--width);
  transform: translate3d(0, 0, calc(var(--depth) * var(--coefficient)));
}

.cube__side:nth-of-type(2) {
  --coefficient: 0.5;
}

.cube__side:nth-of-type(3),
.cube__side:nth-of-type(4) {
  --rotation: 90deg;
  height: var(--height);
  width: var(--depth);
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%) rotateY(var(--rotation)) translate3d(0, 0, calc(var(--width) * -0.5));
}

.cube__side:nth-of-type(4) {
  --rotation: -90deg;
}

.cube__side:nth-of-type(5),
.cube__side:nth-of-type(6) {
  --rotation: -90deg;
  height: var(--depth);
  width: var(--width);
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%) rotateX(var(--rotation)) translate3d(0, 0, calc(var(--height) * -0.5));
}

.cube__side:nth-of-type(6) {
  --rotation: 90deg;
}
